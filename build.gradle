plugins {
    // Provide convenience executables for trying out the examples.
    id 'application'
    id 'java'
    id 'jacoco'
    // ASSUMES GRADLE 5.6 OR HIGHER. Use plugin version 0.8.10 with earlier gradle versions
    id 'com.google.protobuf' version '0.9.3'
    // Generate IntelliJ IDEA's .idea & .iml project files
    id 'idea'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

def grpcVersion = '1.60.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.22.2'
def protocVersion = protobufVersion
def lombokVersion = '1.18.24'
def logbackVersion = '1.2.11'
def junitVersion = '4.13.2'

def jettyVersion = '9.4.51.v20230217'

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    implementation "io.grpc:grpc-netty:${grpcVersion}"
    implementation "io.grpc:grpc-core:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-services:${grpcVersion}"

    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlets:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-annotations:${jettyVersion}"

    compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'


    implementation group: 'com.google.api.grpc', name: 'proto-google-common-protos', version: '2.21.0'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: "${logbackVersion}"
    implementation group: 'net.jcip', name: 'jcip-annotations', version: '1.0'

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:${junitVersion}"
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    manifest {
        attributes "Main-Class": "org.example.HelloWorldClient"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}